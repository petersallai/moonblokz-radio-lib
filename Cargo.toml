[package]
name = "moonblokz-radio-lib"
version = "0.1.0"
edition = "2021"

[dependencies]
embassy-sync = { version = "0.7"}
embassy-executor = { version = "0.9", features = []}
embassy-time = { version = "0.5", features = []}
embassy-futures = { version = "0.1"}

embassy-rp = { version = "0.8",features = ["unstable-pac", "time-driver", "critical-section-impl", "rp2040"],optional = true }
embedded-hal-bus = { version = "0.3", features = ["async"],optional = true}
lora-phy = { git = "https://github.com/lora-rs/lora-rs.git", default-features = false, optional = true}

log = {version="0.4"}
rand_core = { version = "0.9", default-features = false}
rand-wyrand = {version="0.3.0", default-features = false}
critical-section = { version = "1.2.0", features = ["std"],optional = true}

[features]
# Different memory configurations for embedded devices with varying RAM sizes.
# The module requires about 25KB of RAM
memory-config-small = []
# The module requires about 60KB of RAM
memory-config-medium = []
# The module requires about 120KB of RAM
memory-config-large = []

#Enables packet level software CRC checking (16 bit) in radio module.
soft-packet-crc = []

#Default to echo device for easy testing
default = ["radio-device-echo","memory-config-large"]

#Feature sets for different environments. To run on computers, the std feature set must be used, elsewhere many dependencies will not compile (for example critical-sections).
std=["embassy-executor/arch-std","embassy-executor/executor-thread","embassy-time/std","embassy-sync/std","critical-section/std"]
embedded=["embassy-executor/executor-thread","embassy-executor/arch-cortex-m","embassy-executor/executor-interrupt","dep:embassy-rp","dep:embedded-hal-bus","dep:lora-phy"]
radio-device-echo = ["std"]
radio-device-rp-lora-sx1262 = ["embedded","soft-packet-crc"]
radio-device-simulator = ["std"]

[dev-dependencies]
futures = "0.3"

[profile.test]
opt-level = 0
